"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return { value: void 0, done: !0 }; } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable || "" === iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } throw new TypeError(_typeof(iterable) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
var _require = require("uuid"),
  uuidv4 = _require.v4;
/** @type {import('sequelize-cli').Migration} */
module.exports = {
  up: function up(queryInterface, Sequelize) {
    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return queryInterface.bulkInsert("Staffs", [{
              id: uuidv4(),
              fullName: "admin",
              email: "admin@gmail.com",
              password: "$2b$10$iuH69vrqzsaadhYLa0QPN.PK5ToH6IL7KCOmnbEe.wPiLMSoYuFaK",
              phone: "0967688851",
              gender: "male",
              address: "Ninh Kiều, Cần Thơ",
              roleId: "3becac30-81cc-491e-ad6b-c4c5fa0c6039",
              createdAt: "2024-05-02T15:02:12.577Z",
              updatedAt: "2024-05-02T15:02:12.577Z"
            }, {
              id: "418bc007-b26a-489e-9a17-e9ab207750cf",
              fullName: "Lại Thế Văn",
              gender: "male",
              email: "thevan@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "09676888563",
              address: "Vĩnh Phú, Vĩnh An, Châu Thành, An Gian",
              experience: "Từng có hai năm làm việc ở bệnh viện y dược Hà Nội.",
              certificate: "IELTS 9.0 Australia",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaafcf",
              specialistId: "b096d05b-4ef0-41ee-9c07-c5496773fe16",
              createdAt: "2023-11-11T04:36:01.800Z",
              updatedAt: "2023-11-11T04:36:01.800Z"
            }, {
              id: "6017ca37-e629-4240-927f-d63b396a3c7b",
              gender: "female",
              fullName: "Nguyễn Thị Hương Giang",
              email: "huonggiang.nguyen@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688301",
              address: "123 Nguyễn Văn Cừ, Quận 1, TP. Hồ Chí Minh",
              experience: "5 năm kinh nghiệm làm bác sĩ nhi khoa",
              certificate: "IELTS 8.5 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaafcf",
              specialistId: "ff01f2da-068e-4357-9eb5-12c4281a77df",
              createdAt: "2024-05-02T23:19:24.902245Z",
              updatedAt: "2024-05-02T23:19:24.902245Z"
            }, {
              id: "f828d6d7-ae67-409c-bc20-3c71d68cb517",
              gender: "male",
              fullName: "Trần Văn Minh Khôi",
              email: "minhkhoi.tran@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688144",
              address: "45 Lê Duẩn, Quận Hai Bà Trưng, Hà Nội",
              experience: "3 năm kinh nghiệm làm điều dưỡng",
              certificate: "IELTS 8.5 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaaf2f",
              specialistId: "8ca0a91b-ad7e-4331-93ca-7c82cf2f36e6",
              createdAt: "2024-05-02T23:19:24.902245Z",
              updatedAt: "2024-05-02T23:19:24.902245Z"
            }, {
              id: "3243bfd7-4c34-4d75-9ef6-55f1aa5d141b",
              fullName: "Lê Thùy Dương",
              gender: "female",
              email: "thuydung.le@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688509",
              address: "789 Trần Hưng Đạo, Quận 5, TP. Hồ Chí Minh",
              experience: "Mới tốt nghiệp ngành y tế công cộng",
              certificate: "IELTS 8.5 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaaf2d",
              specialistId: "b096d05b-4ef0-41ee-9c07-c5496773fe16",
              createdAt: "2024-05-02T23:19:24.902245Z",
              updatedAt: "2024-05-02T23:19:24.902245Z"
            }, {
              id: "fdedf2bf-7e78-4acf-bda0-f23bce4c1cec",
              fullName: "Phạm Gia Hưng",
              gender: "male",
              email: "giahung.pham@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688745",
              address: "21 Nguyễn Trãi, Quận Thanh Xuân, Hà Nội",
              experience: "8 năm kinh nghiệm làm bác sĩ phẫu thuật",
              certificate: "IELTS 8.5 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "5e065f83-3dc9-471b-88a7-9e0bc22b2fbc",
              specialistId: "b310fa03-5697-419b-8c13-8f9d32a59384",
              createdAt: "2024-05-02T23:19:24.902245Z",
              updatedAt: "2024-05-02T23:19:24.902245Z"
            }, {
              id: "44096a8f-f53c-4a97-8460-1c68b108ca73",
              fullName: "Hoàng Thanh Bình",
              gender: "male",
              email: "thanhbinh.hoang@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688461",
              address: "56 Nguyễn Huệ, Quận 1, TP. Hồ Chí Minh",
              experience: "2 năm kinh nghiệm làm nhân viên y tế",
              certificate: "IELTS 8.5 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaafcf",
              specialistId: "fd3ff0c3-212e-4076-8ca5-9a665671131d",
              createdAt: "2024-05-02T23:19:24.902245Z",
              updatedAt: "2024-05-02T23:19:24.902245Z"
            }, {
              id: "e5bc42eb-39b8-49a3-8508-c809f1eb9ed9",
              gender: "male",
              fullName: "Vũ Đức Hiếu",
              email: "duchieu.vu@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688815",
              address: "112 Lê Văn Lương, Quận 7, TP. Hồ Chí Minh",
              experience: "6 năm kinh nghiệm làm bác sĩ gia đình",
              certificate: "IELTS 8.5 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaaf2f",
              specialistId: "6c8c4087-6bf8-4818-8aea-1e19444a1f5f",
              createdAt: "2024-05-02T23:19:24.902245Z",
              updatedAt: "2024-05-02T23:19:24.902245Z"
            }, {
              id: "7306bae5-6831-4d9e-b69b-d3460148a29a",
              gender: "female",
              fullName: "Đặng Khánh Linh",
              email: "khanhlinh.dang@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688336",
              address: "67 Trần Phú, Quận Hải Châu, Đà Nẵng",
              experience: "4 năm kinh nghiệm làm dược sĩ",
              certificate: "IELTS 8.5 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaaf2d",
              specialistId: "f647fd6c-c994-4c37-9620-6bfb5d538ab2",
              createdAt: "2024-05-02T23:19:24.902245Z",
              updatedAt: "2024-05-02T23:19:24.902245Z"
            }, {
              id: "a9909e61-3a9a-4d1c-b65c-d77f4d03aaff",
              fullName: "Ngô Quang Trường",
              gender: "male",
              email: "quangtruong.ngo@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688833",
              address: "34 Nguyễn Văn Linh, Quận Hải Châu, Đà Nẵng",
              experience: "Mới tốt nghiệp cao đẳng điều dưỡng",
              certificate: "IELTS 8.5 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "5e065f83-3dc9-471b-88a7-9e0bc22b2fbc",
              specialistId: "ff01f2da-068e-4357-9eb5-12c4281a77df",
              createdAt: "2024-05-02T23:19:24.902245Z",
              updatedAt: "2024-05-02T23:19:24.902245Z"
            }, {
              id: "d3aceacf-0d13-49d9-833a-7c1698acc79b",
              gender: "female",
              fullName: "Bùi Thị Thu Hà",
              email: "thuha.bui@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688682",
              address: "89 Lê Lợi, Quận Ngô Quyền, Hải Phòng",
              experience: "10 năm kinh nghiệm làm bác sĩ răng hàm mặt",
              certificate: "IELTS 8.5 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaafcf",
              specialistId: "8ca0a91b-ad7e-4331-93ca-7c82cf2f36e6",
              createdAt: "2024-05-02T23:19:24.902245Z",
              updatedAt: "2024-05-02T23:19:24.902245Z"
            }, {
              id: "d5fbbed1-44d3-44c1-adfd-60c050fe1c72",
              gender: "male",
              fullName: "Lương Quốc Việt",
              email: "quocviet.luong@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688958",
              address: "145 Điện Biên Phủ, Quận Bình Thạnh, TP. Hồ Chí Minh",
              experience: "3 năm kinh nghiệm làm kỹ thuật viên xét nghiệm",
              certificate: "IELTS 8.5 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaaf2f",
              specialistId: "b096d05b-4ef0-41ee-9c07-c5496773fe16",
              createdAt: "2024-05-02T23:19:24.902245Z",
              updatedAt: "2024-05-02T23:19:24.902245Z"
            }, {
              id: "f93d8819-f328-4530-af30-afcbf7be6328",
              gender: "female",
              fullName: "Đỗ Mỹ Hạnh",
              email: "myhanh.do@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688705",
              address: "27 Trần Hưng Đạo, Quận Hoàn Kiếm, Hà Nội",
              experience: "7 năm kinh nghiệm làm bác sĩ phẫu thuật tim mạch",
              certificate: "IELTS 8.5 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaaf2d",
              specialistId: "b310fa03-5697-419b-8c13-8f9d32a59384",
              createdAt: "2024-05-02T23:19:24.902245Z",
              updatedAt: "2024-05-02T23:19:24.902245Z"
            }, {
              id: "08293ec5-414d-4541-8c05-81247d02c64b",
              fullName: "Trần Thị Thanh Huyền",
              email: "tranthithanhhuyen@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688139",
              address: "123 Nguyễn Văn Cừ, Quận 1, TP. Hồ Chí Minh",
              gender: "male",
              experience: "5 năm kinh nghiệm làm bác sĩ nhi khoa",
              certificate: "Board Certification in Internal Medicine, IELTS 9.0 Australia",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaafcf",
              specialistId: "fd3ff0c3-212e-4076-8ca5-9a665671131d",
              createdAt: "2024-05-03T10:20:35.035253Z",
              updatedAt: "2024-05-03T10:20:35.035253Z"
            }, {
              id: "e2093619-9daa-453e-b2ba-9f4baa732754",
              fullName: "Lê Văn Quốc Bảo",
              email: "levanquocbao@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688234",
              address: "45 Lê Duẩn, Quận Hai Bà Trưng, Hà Nội",
              gender: "female",
              experience: "3 năm kinh nghiệm làm điều dưỡng",
              certificate: "TOEIC 950, IELTS 8.0 Australia",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaaf2f",
              specialistId: "8ca0a91b-ad7e-4331-93ca-7c82cf2f36e6",
              createdAt: "2024-05-03T10:20:35.035253Z",
              updatedAt: "2024-05-03T10:20:35.035253Z"
            }, {
              id: "8bdba74d-d303-4451-9e85-16dfc9b472a1",
              fullName: "Nguyễn Thị Hà My",
              email: "nguyenthihamy@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688244",
              address: "789 Trần Hưng Đạo, Quận 5, TP. Hồ Chí Minh",
              gender: "female",
              experience: "Mới tốt nghiệp ngành y tế công cộng",
              certificate: "IELTS 7.5 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "5e065f83-3dc9-471b-88a7-9e0bc22b2fbc",
              specialistId: "f647fd6c-c994-4c37-9620-6bfb5d538ab2",
              createdAt: "2024-05-03T10:20:35.035253Z",
              updatedAt: "2024-05-03T10:20:35.035253Z"
            }, {
              id: "3f7f6c40-22db-4208-8b9e-5095de3488c6",
              fullName: "Phạm Đức Minh",
              email: "phamducminh@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688830",
              address: "21 Nguyễn Trãi, Quận Thanh Xuân, Hà Nội",
              gender: "female",
              experience: "8 năm kinh nghiệm làm bác sĩ phẫu thuật",
              certificate: "TOEFL iBT 110, IELTS 8.5 Australia",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaafcf",
              specialistId: "6c8c4087-6bf8-4818-8aea-1e19444a1f5f",
              createdAt: "2024-05-03T10:20:35.035253Z",
              updatedAt: "2024-05-03T10:20:35.035253Z"
            }, {
              id: "f8245c2a-ce6a-4268-9e8d-2e34310dd79e",
              fullName: "Võ Thị Thanh Trúc",
              email: "vothithanhtruc@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688333",
              address: "56 Nguyễn Huệ, Quận 1, TP. Hồ Chí Minh",
              gender: "male",
              experience: "2 năm kinh nghiệm làm nhân viên y tế",
              certificate: "IELTS 7.0 New Zealand",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaaf2f",
              specialistId: "ff01f2da-068e-4357-9eb5-12c4281a77df",
              createdAt: "2024-05-03T10:20:35.035253Z",
              updatedAt: "2024-05-03T10:20:35.035253Z"
            }, {
              id: "7409b308-298a-444f-935e-1640eb3ad689",
              fullName: "Huỳnh Công Danh",
              email: "huynhcongdanh@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688924",
              address: "112 Lê Văn Lương, Quận 7, TP. Hồ Chí Minh",
              gender: "male",
              experience: "6 năm kinh nghiệm làm bác sĩ gia đình",
              certificate: "TOEIC 900, IELTS 8.0 UK",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaaf2f",
              specialistId: "ff01f2da-068e-4357-9eb5-12c4281a77df",
              createdAt: "2024-05-03T10:20:35.035253Z",
              updatedAt: "2024-05-03T10:20:35.035253Z"
            }, {
              id: "8f943310-bbaf-400c-8e7d-fe0cbe6226a9",
              fullName: "Phan Thị Ngọc Linh",
              email: "phanthingoclinh@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688882",
              address: "67 Trần Phú, Quận Hải Châu, Đà Nẵng",
              gender: "female",
              experience: "4 năm kinh nghiệm làm dược sĩ",
              certificate: "IELTS 8.5 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaafcf",
              specialistId: "8ca0a91b-ad7e-4331-93ca-7c82cf2f36e6",
              createdAt: "2024-05-03T10:20:35.035253Z",
              updatedAt: "2024-05-03T10:20:35.035253Z"
            }, {
              id: "8ac47279-79cb-4b4a-ae05-fb66ba20f978",
              fullName: "Trương Hoàng Phúc",
              email: "truonghoangphuc@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688120",
              address: "34 Nguyễn Văn Linh, Quận Hải Châu, Đà Nẵng",
              gender: "male",
              experience: "Mới tốt nghiệp cao đẳng điều dưỡng",
              certificate: "TOEFL iBT 105, IELTS 7.5 UK",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "5e065f83-3dc9-471b-88a7-9e0bc22b2fbc",
              specialistId: "8ca0a91b-ad7e-4331-93ca-7c82cf2f36e6",
              createdAt: "2024-05-03T10:20:35.035253Z",
              updatedAt: "2024-05-03T10:20:35.035253Z"
            }, {
              id: "e34980af-de4d-4653-8728-942178eeea97",
              fullName: "Đặng Minh Quân",
              email: "dangminhquan@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688779",
              address: "89 Lê Lợi, Quận Ngô Quyền, Hải Phòng",
              gender: "male",
              experience: "10 năm kinh nghiệm làm bác sĩ răng hàm mặt",
              certificate: "TOEIC 950, IELTS 9.0 Australia",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaaf2f",
              specialistId: "f647fd6c-c994-4c37-9620-6bfb5d538ab2",
              createdAt: "2024-05-03T10:20:35.035253Z",
              updatedAt: "2024-05-03T10:20:35.035253Z"
            }, {
              id: "66db5b1e-b3fe-408d-aadb-8dbc6b1b36d2",
              fullName: "Lý Hoàng Ân",
              email: "lyhoangan@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688775",
              address: "145 Điện Biên Phủ, Quận Bình Thạnh, TP. Hồ Chí Minh",
              gender: "male",
              experience: "3 năm kinh nghiệm làm kỹ thuật viên xét nghiệm",
              certificate: "IELTS 8.0 New Zealand",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "5e065f83-3dc9-471b-88a7-9e0bc22b2fbc",
              specialistId: "f647fd6c-c994-4c37-9620-6bfb5d538ab2",
              createdAt: "2024-05-03T10:20:35.035253Z",
              updatedAt: "2024-05-03T10:20:35.035253Z"
            }, {
              id: "71a3ad3b-d1e8-46d1-a6dd-2360bc22a937",
              fullName: "Nguyễn Văn An",
              email: "nguyenvanan@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688739",
              address: "123 Nguyễn Trãi, Quận 1, TP. Hồ Chí Minh",
              gender: "female",
              experience: "8 năm kinh nghiệm làm bác sĩ nhi khoa",
              certificate: "Board Certification in Pediatrics, IELTS 8.5 Australia",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "5e065f83-3dc9-471b-88a7-9e0bc22b2fbc",
              specialistId: "b096d05b-4ef0-41ee-9c07-c5496773fe16",
              createdAt: "2024-05-03T10:26:06.529438Z",
              updatedAt: "2024-05-03T10:26:06.529438Z"
            }, {
              id: "ec2f428d-88e0-4d14-a223-164a6fb587d4",
              fullName: "Trần Thị Bích Ngọc",
              email: "tranthibichngoc@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688761",
              address: "45 Trần Hưng Đạo, Quận Hoàn Kiếm, Hà Nội",
              gender: "male",
              experience: "5 năm kinh nghiệm làm điều dưỡng viên",
              certificate: "TOEIC 850, IELTS 7.5 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaaf2f",
              specialistId: "f647fd6c-c994-4c37-9620-6bfb5d538ab2",
              createdAt: "2024-05-03T10:26:06.530436Z",
              updatedAt: "2024-05-03T10:26:06.530436Z"
            }, {
              id: "778a30aa-34bd-4c0a-8d3a-a5e67301e6bf",
              fullName: "Lê Hoàng Minh",
              email: "lehoangminh@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688608",
              address: "789 Lê Duẩn, Quận Hai Bà Trưng, Hà Nội",
              gender: "female",
              experience: "Mới tốt nghiệp ngành y tế công cộng",
              certificate: "IELTS 8.0 New Zealand",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "5e065f83-3dc9-471b-88a7-9e0bc22b2fbc",
              specialistId: "f647fd6c-c994-4c37-9620-6bfb5d538ab2",
              createdAt: "2024-05-03T10:26:06.530436Z",
              updatedAt: "2024-05-03T10:26:06.530436Z"
            }, {
              id: "17f42be6-7a3b-469a-b39a-19657f3c4328",
              fullName: "Phạm Quốc Tuấn",
              email: "phamquoctuan@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688623",
              address: "21 Nguyễn Thị Minh Khai, Quận 3, TP. Hồ Chí Minh",
              gender: "male",
              experience: "10 năm kinh nghiệm làm bác sĩ phẫu thuật",
              certificate: "TOEFL iBT 115, IELTS 9.0 Australia",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaaf2d",
              specialistId: "f647fd6c-c994-4c37-9620-6bfb5d538ab2",
              createdAt: "2024-05-03T10:26:06.530436Z",
              updatedAt: "2024-05-03T10:26:06.530436Z"
            }, {
              id: "47e2839f-eaa2-40d8-9001-005ee0a64a2f",
              fullName: "Võ Thị Kim Ngân",
              email: "vothikimngan@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688951",
              address: "56 Lý Thường Kiệt, Quận Tân Bình, TP. Hồ Chí Minh",
              gender: "female",
              experience: "3 năm kinh nghiệm làm nhân viên y tế",
              certificate: "IELTS 7.0 UK",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaafcf",
              specialistId: "8ca0a91b-ad7e-4331-93ca-7c82cf2f36e6",
              createdAt: "2024-05-03T10:26:06.530436Z",
              updatedAt: "2024-05-03T10:26:06.530436Z"
            }, {
              id: "02975cfd-8316-4c81-b7fa-258f0df9abcd",
              fullName: "Huỳnh Văn Thành",
              email: "huynhvanthanh@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688609",
              address: "112 Trần Phú, Quận Hải Châu, Đà Nẵng",
              gender: "female",
              experience: "7 năm kinh nghiệm làm bác sĩ gia đình",
              certificate: "TOEIC 900, IELTS 8.0 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "5e065f83-3dc9-471b-88a7-9e0bc22b2fbc",
              specialistId: "6c8c4087-6bf8-4818-8aea-1e19444a1f5f",
              createdAt: "2024-05-03T10:26:06.530436Z",
              updatedAt: "2024-05-03T10:26:06.530436Z"
            }, {
              id: "edf806ec-4e85-49bb-b318-c49eb2219d6e",
              fullName: "Phan Thị Mỹ Linh",
              email: "phanthimylinh@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688446",
              address: "67 Lê Lợi, Quận Ngô Quyền, Hải Phòng",
              gender: "male",
              experience: "6 năm kinh nghiệm làm dược sĩ",
              certificate: "IELTS 7.5 New Zealand",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaaf2f",
              specialistId: "6c8c4087-6bf8-4818-8aea-1e19444a1f5f",
              createdAt: "2024-05-03T10:26:06.530436Z",
              updatedAt: "2024-05-03T10:26:06.530436Z"
            }, {
              id: "225fc642-0506-4d7f-a0dc-a5018853fd07",
              fullName: "Trương Văn Phúc",
              email: "truongvanphuc@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688487",
              address: "34 Điện Biên Phủ, Quận Bình Thạnh, TP. Hồ Chí Minh",
              gender: "female",
              experience: "Mới tốt nghiệp cao đẳng điều dưỡng",
              certificate: "TOEFL iBT 100, IELTS 7.0 UK",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "5e065f83-3dc9-471b-88a7-9e0bc22b2fbc",
              specialistId: "ff01f2da-068e-4357-9eb5-12c4281a77df",
              createdAt: "2024-05-03T10:26:06.530436Z",
              updatedAt: "2024-05-03T10:26:06.530436Z"
            }, {
              id: "71192993-7383-4ea8-9372-8fada98d2948",
              fullName: "Đặng Thị Hoa",
              email: "dangthihoa@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688850",
              address: "89 Nguyễn Huệ, Quận 1, TP. Hồ Chí Minh",
              gender: "female",
              experience: "12 năm kinh nghiệm làm bác sĩ răng hàm mặt",
              certificate: "TOEIC 950, IELTS 9.0 Australia",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaaf2f",
              specialistId: "b310fa03-5697-419b-8c13-8f9d32a59384",
              createdAt: "2024-05-03T10:26:06.530436Z",
              updatedAt: "2024-05-03T10:26:06.530436Z"
            }, {
              id: "192d8434-fda6-41ee-8174-df75c32127dd",
              fullName: "Lý Hoàng Anh",
              email: "lyhoanganh@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688278",
              address: "145 Lê Văn Sỹ, Quận 3, TP. Hồ Chí Minh",
              gender: "female",
              experience: "4 năm kinh nghiệm làm kỹ thuật viên xét nghiệm",
              certificate: "IELTS 8.0 Canada",
              roleId: "f1e9f129-da8d-4db0-93ee-46bb422fdebd",
              academicDegreeId: "480f5c52-abbd-4d28-9c9c-99c41feaafcf",
              specialistId: "b096d05b-4ef0-41ee-9c07-c5496773fe16",
              createdAt: "2024-05-03T10:26:06.530436Z",
              updatedAt: "2024-05-03T10:26:06.530436Z"
            }], {});
          case 2:
            _context.next = 4;
            return queryInterface.bulkInsert("Staffs", [{
              id: "a7b84732-719a-4709-8be2-f7573fb74f2f",
              fullName: "Nguyễn Thị Thanh",
              email: "nguyenthithanh@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688155",
              address: "789 Lê Lai, Quận 5, TP. Hồ Chí Minh",
              gender: "male",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:32:22.851519Z",
              updatedAt: "2024-05-03T10:32:22.851519Z"
            }, {
              id: "24514ff9-7a7b-4210-818a-f29610fa7a53",
              fullName: "Trần Đình Hải",
              email: "trandinhhai@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688394",
              address: "45 Lý Thường Kiệt, Quận Hoàn Kiếm, Hà Nội",
              gender: "male",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:32:22.851519Z",
              updatedAt: "2024-05-03T10:32:22.851519Z"
            }, {
              id: "367b4d65-bbd5-435b-8878-2df64ff2c862",
              fullName: "Lê Thị Hương",
              email: "lethihuong@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688497",
              address: "123 Lê Duẩn, Quận Hai Bà Trưng, Hà Nội",
              gender: "female",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:32:22.851519Z",
              updatedAt: "2024-05-03T10:32:22.851519Z"
            }, {
              id: "defcd6ee-bb56-4623-b990-c99be13ac795",
              fullName: "Phạm Văn Tài",
              email: "phamvantai@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688922",
              address: "21 Đinh Tiên Hoàng, Quận 1, TP. Hồ Chí Minh",
              gender: "male",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:32:22.851519Z",
              updatedAt: "2024-05-03T10:32:22.851519Z"
            }, {
              id: "1ef03a59-d2dc-4ef7-ae4e-decd35693490",
              fullName: "Võ Thị Diệu Linh",
              email: "vothidieulinh@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688167",
              address: "56 Nguyễn Thị Minh Khai, Quận 3, TP. Hồ Chí Minh",
              gender: "male",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:32:22.851519Z",
              updatedAt: "2024-05-03T10:32:22.851519Z"
            }, {
              id: "8a123f2c-42c7-408a-9f1f-bf4c5ba7fa86",
              fullName: "Huỳnh Văn Hùng",
              email: "huynhvanhung@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688686",
              address: "112 Phan Chu Trinh, Quận Hải Châu, Đà Nẵng",
              gender: "female",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:32:22.851519Z",
              updatedAt: "2024-05-03T10:32:22.851519Z"
            }, {
              id: "78f79e22-64b0-4891-904b-1c47a183223d",
              fullName: "Phan Thị Thủy",
              email: "phanthithuy@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688937",
              address: "67 Đào Duy Từ, Quận Ngô Quyền, Hải Phòng",
              gender: "male",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:32:22.851519Z",
              updatedAt: "2024-05-03T10:32:22.851519Z"
            }, {
              id: "d0e42767-926f-4ce0-94cb-343e72a237d4",
              fullName: "Trương Văn Quân",
              email: "truongvanquan@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688687",
              address: "34 Nguyễn Huệ, Quận 1, TP. Hồ Chí Minh",
              gender: "female",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:32:22.851519Z",
              updatedAt: "2024-05-03T10:32:22.851519Z"
            }, {
              id: "1d4edbfc-6441-4a92-9ca3-6f40a7c93daf",
              fullName: "Đặng Văn Hòa",
              email: "dangvanhoa@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688605",
              address: "89 Phan Đăng Lưu, Quận Bình Thạnh, TP. Hồ Chí Minh",
              gender: "male",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:32:22.851519Z",
              updatedAt: "2024-05-03T10:32:22.851519Z"
            }, {
              id: "c95380ad-a21e-45c3-b818-0ad6a9ee1a40",
              fullName: "Lý Thị Thúy Hằng",
              email: "lythithuyhang@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688484",
              address: "145 Lê Thị Riêng, Quận 3, TP. Hồ Chí Minh",
              gender: "female",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:32:22.851519Z",
              updatedAt: "2024-05-03T10:32:22.851519Z"
            }, {
              id: "67db2c7e-3014-4a0b-be79-874c753b477b",
              fullName: "Nguyễn Văn Anh",
              email: "nguyenvananh@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688621",
              address: "123 Nguyễn Trãi, Quận 1, TP. Hồ Chí Minh",
              gender: "male",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:36:15.154420Z",
              updatedAt: "2024-05-03T10:36:15.154420Z"
            }, {
              id: "80476afc-2142-4a99-965e-0e42ac933fdb",
              fullName: "Trần Thị Bảo Châu",
              email: "tranthibaochau@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688629",
              address: "45 Trần Hưng Đạo, Quận Hoàn Kiếm, Hà Nội",
              gender: "female",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:36:15.154420Z",
              updatedAt: "2024-05-03T10:36:15.154420Z"
            }, {
              id: "03e7cebf-694b-4511-a4ff-f359d1f120d0",
              fullName: "Lê Hoàng Duy",
              email: "lehoangduy@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688549",
              address: "789 Lê Duẩn, Quận Hai Bà Trưng, Hà Nội",
              gender: "male",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:36:15.154420Z",
              updatedAt: "2024-05-03T10:36:15.154420Z"
            }, {
              id: "a4b19e2e-390f-4561-ae3d-143ae4dd5b4d",
              fullName: "Phạm Quỳnh Hương",
              email: "phamquynhhuong@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688729",
              address: "21 Nguyễn Thị Minh Khai, Quận 3, TP. Hồ Chí Minh",
              gender: "male",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:36:15.154420Z",
              updatedAt: "2024-05-03T10:36:15.154420Z"
            }, {
              id: "12801cf2-66e2-4a49-a77f-c03db270b46c",
              fullName: "Võ Thanh Kiều",
              email: "vothanhkieu@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688375",
              address: "56 Lý Thường Kiệt, Quận Tân Bình, TP. Hồ Chí Minh",
              gender: "male",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:36:15.154420Z",
              updatedAt: "2024-05-03T10:36:15.154420Z"
            }, {
              id: "3578a2c4-42bb-468a-9815-4406d50e3310",
              fullName: "Huỳnh Văn Linh",
              email: "huynhvanlinh@gmail.com",
              password: "$2b$10$SZ5fT6KQX0f/rr6NxOvy5ePZFQiPcO8Tqekfyt6elQH7zMIvumi2a",
              phone: "0967688483",
              address: "112 Trần Phú, Quận Hải Châu, Đà Nẵng",
              gender: "male",
              roleId: "fad3735b-c6b6-4e52-8e35-d965291eba93",
              createdAt: "2024-05-03T10:36:15.154420Z",
              updatedAt: "2024-05-03T10:36:15.154420Z"
            }], {});
          case 4:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }))();
  },
  down: function down(queryInterface, Sequelize) {
    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }))();
  } /**
     * Add commands to revert seed here.
     *
     * Example:
     * await queryInterface.bulkDelete('People', null, {});
     */
};